{"version":3,"sources":["hooks/useToggle.js","components/DropdownMenu.js","images/meme.jpg","components/Header.js","components/Gameboard.js","components/StartMenu.js","components/Footer.js","components/GameOver.js","firebase/config.js","hooks/getRandom.js","App.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","DropdownMenu","props","xPos","yPos","tags","xSize","ySize","handleButtonClick","relX","Math","round","relY","className","style","top","left","map","tag","index","onClick","label","x","Header","randomTags","time","found","y","Gameboard","updateTime","dropdownOpen","togggleDropdownOpen","dropdownCoords","setDropdownCoords","imgRef","useRef","imageSize","updateImageSize","useEffect","setTimeout","history","useHistory","handleWin","every","push","event","current","scrollWidth","scrollHeight","src","meme","alt","ref","StartMenu","handleClick","retrievingData","to","Footer","href","title","GameOver","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","FieldValue","serverTimestamp","getRandom","arr","n","result","Array","len","length","taken","RangeError","floor","random","App","imgTags","setImageTags","setRandomTags","updateRetrievingData","fetchTags","a","response","collection","get","docs","forEach","item","data","exact","path","difficulty","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621042b3.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useToggle(initialVal = false) {\r\n  const [state, setState] = useState(initialVal);\r\n\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n}\r\n\r\nexport default useToggle;","\r\nfunction DropdownMenu(props){\r\n    const {xPos, yPos, tags, xSize, ySize, handleButtonClick} = props\r\n    const relX = Math.round((xPos / xSize) * 100) / 100\r\n    const relY = Math.round((yPos / ySize) * 100) / 100\r\n\r\n    function checkStyle () {\r\n        let style = \"\"\r\n        if (yPos >= 0.8 && xPos >= 0.8 ) {\r\n            style = \"bottom:\" + xPos + \"px, right: \" +yPos + \"px\"\r\n        }\r\n        if (yPos >= 0.8 && xPos < 0.8 ) {\r\n            style = \"bottom:\" + xPos + \"px, left: \" +yPos + \"px\"\r\n        }\r\n        if (yPos < 0.8 && xPos < 0.8 ) {\r\n            style = \"top:\" + xPos + \"px, left: \" +yPos + \"px\"\r\n        }\r\n        if (yPos < 0.8 && xPos >= 0.8 ) {\r\n            style = \"top: calc(\" + xPos + \"px), right: calc(\" +yPos + \"px)\"\r\n        }\r\n        console.log(style)\r\n        return style\r\n    }\r\n\r\n    // \r\n\r\n    return(\r\n        <div\r\n            className=\"dropdown-menu\"\r\n            style={{ \r\n                top: `${yPos}px`,\r\n                left: `${xPos}px`,           \r\n            }}\r\n        >\r\n\r\n            {tags.map((tag, index) => \r\n                <button\r\n                    className=\"dropdown-button\"\r\n                    key={tag.x}\r\n                    onClick={() => handleButtonClick(tag, index, relX, relY)}\r\n                >\r\n                    {tag.label}\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownMenu","export default __webpack_public_path__ + \"static/media/meme.88f25bea.jpg\";","function Header(props) {\r\n\r\n  const { randomTags, time } = props\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n        {randomTags.map((tag) =>\r\n          <div\r\n            key={tag.y}\r\n            className=\"nav-item\"\r\n            found={tag.found}\r\n          >\r\n            {tag.label}\r\n          </div>\r\n        )}\r\n        <div className=\"nav-item timer\">{time}</div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Header;\r\n  ","import { useState, useRef, useEffect } from 'react'\r\nimport useToggle from '../hooks/useToggle';\r\nimport DropdownMenu from '../components/DropdownMenu'\r\nimport meme from '../images/meme.jpg'\r\nimport Header from './Header';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Gameboard(props) {\r\n\r\n  const {randomTags, time, updateTime} = props\r\n\r\n  const [dropdownOpen, togggleDropdownOpen] = useToggle(false)\r\n  const [dropdownCoords, setDropdownCoords] = useState({x: 0, y: 0})\r\n  const imgRef = useRef()\r\n  const [imageSize, updateImageSize] = useState({x: 0, y: 0})\r\n  // const [time, updateTime] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      updateTime(time + 1);\r\n    }, 1000);\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  function routeChange() { \r\n    let path = `gameover`; \r\n    history.push(path);\r\n  }\r\n\r\n  function handleImageClick(event) {\r\n    const {\"pageX\": x, \"pageY\": y} = event\r\n    const xSize = imgRef.current.scrollWidth\r\n    const ySize = imgRef.current.scrollHeight\r\n    updateImageSize({xSize, ySize})\r\n    setDropdownCoords({x, y})\r\n    togggleDropdownOpen()\r\n  }\r\n\r\n  function handleWin() {\r\n    const found = (tag) => tag.found === \"true\"\r\n    if (randomTags.every(found) === true){\r\n      routeChange()\r\n    }\r\n  }\r\n\r\n  function handleButtonClick(tag, index, relX, relY){\r\n    if (relX < tag.x + .1 && relX > tag.x - .1){\r\n      if (relY < tag.y + .1 && relY > tag.y - .1){\r\n          randomTags[index].found = \"true\"\r\n          handleWin()\r\n        }\r\n    } else {\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        randomTags={randomTags}\r\n        time={time}\r\n      >\r\n      </Header>\r\n\r\n      <div \r\n        onClick={handleImageClick}\r\n      >\r\n        {dropdownOpen && (\r\n          <DropdownMenu\r\n          xPos={dropdownCoords.x}\r\n          yPos={dropdownCoords.y}\r\n          xSize={imageSize.xSize}\r\n          ySize={imageSize.ySize}\r\n          tags={randomTags}\r\n          handleButtonClick={handleButtonClick}\r\n          />\r\n        )}\r\n        <img \r\n          src={meme} \r\n          alt=\"\"\r\n          ref={imgRef}\r\n        />\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Gameboard;\r\n","import { Link } from \"react-router-dom\"\r\nimport '../index.css'\r\n\r\nfunction StartMenu(props) {\r\n    \r\n    const {handleClick, retrievingData} = props\r\n\r\n  return (\r\n    <div className=\"start-page\" >\r\n      <div className=\"start-menu-container\">\r\n        <h1>Can you find the memes?</h1>\r\n        {!retrievingData &&(\r\n          <Link to=\"/Gameboard\">\r\n            <button className=\"start-button\" onClick={() => handleClick(3)}>Easy Game</button>\r\n            <button className=\"start-button\" onClick={() => handleClick(6)}>Medium Game</button>\r\n            <button className=\"start-button\" onClick={() => handleClick(9)}>Hard Game</button>\r\n          </Link> \r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StartMenu;","function Footer() {\r\n\r\n    return (\r\n      <div className=\"footer\">\r\n        <div>\r\n          Art by reddit u/Sickpupz <a href=\"https://www.reddit.com/r/wimmelbilder/comments/cif7jo/meme_supreme_by_me/\" title=\"Pixel perfect\">\r\n            Meme Supreme\r\n          </a>\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Footer;\r\n  ","import { Link } from \"react-router-dom\"\r\nimport '../index.css'\r\n\r\nfunction GameOver(props) {\r\n    \r\n    const { time } = props\r\n\r\n  return (\r\n    <div className=\"start-page\">\r\n      <div className=\"start-menu-container\">\r\n        <h1>You Win!</h1>\r\n        <p>And it only took you... <h1>{time} seconds</h1> What a legend.</p>\r\n        <Link to=\"/StartMenu\">\r\n          <button className=\"start-button\"> Play Again</button>\r\n        </Link> \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\nexport { firestore, timestamp };","function getRandom(arr, n) {\r\n    var result = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    while (n--) {\r\n        var x = Math.floor(Math.random() * len);\r\n        result[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default getRandom;","import React from 'react'\nimport { HashRouter as BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Gameboard from './components/Gameboard'\nimport StartMenu from './components/StartMenu'\nimport Footer from './components/Footer'\nimport GameOver from './components/GameOver';\nimport { firestore } from './firebase/config'\nimport { useState, useEffect } from 'react'\nimport getRandom from './hooks/getRandom'\n\n\nfunction App() {\n\n  const [imgTags, setImageTags] = useState([])\n  const [randomTags, setRandomTags] = useState([])\n  const [time, updateTime] = useState(0)\n  const [retrievingData, updateRetrievingData] = useState(true)\n\n  useEffect(() => {\n      fetchTags()\n  }, [])\n  \n  const fetchTags = async()=>{\n      const response = firestore.collection('coordinates')\n      const data = await response.get()\n      data.docs.forEach(item => {\n          setImageTags(imgTags => [...imgTags, item.data()])\n      })\n      updateRetrievingData(false)\n  }\n\n  function handleClick(difficulty){\n    let tags = getRandom(imgTags, difficulty)\n    tags.forEach((e) => {\n      e.found = \"false\"\n    })\n    setRandomTags(tags)\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n\n        <Route exact path=\"/\">\n          <Redirect to=\"/StartMenu\" />\n        </Route>\n\n        <Route path=\"/StartMenu\">\n          <StartMenu handleClick={handleClick} retrievingData={retrievingData}/>\n        </Route>\n\n        <Route path=\"/Gameboard\">\n          <Gameboard randomTags={randomTags} time={time} updateTime={updateTime}/>\n        </Route>\n\n        <Route path=\"/GameOver\">\n          <GameOver time={time}/>\n        </Route>\n\n      </Switch>\n      <Footer/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}